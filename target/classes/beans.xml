<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:tx="http://www.springframework.org/schema/tx">
	
	<context:property-placeholder location="classpath:param.properties" />
	<!--轮询配置 -->
	<!-- <bean id="posSync" class="com.rongyifu.mms.datasync.PosSyncFile"/> -->
    <bean id="merContract" class="com.rongyifu.mms.merchant.MerContractExpiresNote"/>
    <bean id="daifu" class="com.rongyifu.mms.bank.b2e.DaifuAutoRun"/>
    <bean id="sendsms" class="com.rongyifu.mms.modules.bgservice.SmsSendDaily"/>
    <bean id="queryBank" class="com.rongyifu.mms.bank.query.BankQueryProcessor"/>
    <!-- <bean id="citicSettlement" class="com.rongyifu.mms.bank.citic.CiticSettlement"/> -->
    <!-- <bean id="LiqDataProcessor" class="com.rongyifu.mms.datasync.LiqDataProcessor"/> -->
    <bean id="initMerAccServer" class="com.rongyifu.mms.ewp.InitMerAccServer"/>
    <!-- <bean id="InitFtpTransData" class="com.rongyifu.mms.modules.bgservice.InitFtpTransData" /> -->
    <bean id="autoNoticeMer" class="com.rongyifu.mms.modules.bgservice.AutoNoticeMer"/>
    <bean id="posDzSync" class="com.rongyifu.mms.datasync.posdz.PosDzSyncListener"/>
    <bean id="refundSyncJob" class="com.rongyifu.mms.quartz.jobs.RefundSyncJob"/>
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
            <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="merContract" />
                            <property name="targetMethod" value="doAddNote" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0 2 1,15 * ?" />
            </bean>
                <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="daifu" />
                            <property name="targetMethod" value="run" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0/10 * * * ?" />
                </bean>
                
                <!--每天零点执行 -->
                <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="daifu" />
                            <property name="targetMethod" value="sign" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 30 1 * * ?" />
                </bean>
                
                  <!--每天九点执行发送日数据统计结果 -->
<!--                 <bean class="org.springframework.scheduling.quartz.CronTriggerBean"> -->
<!--                     <property name="jobDetail"> -->
<!--                         <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> -->
<!--                             <property name="targetObject" ref="sendsms" /> -->
<!--                             <property name="targetMethod" value="send" /> -->
<!--                         </bean> -->
<!--                     </property> -->
<!--                     <property name="cronExpression" value="0 0 9 * * ?" /> -->
<!--                 </bean> -->
                
                <!--每天零点十分执行 -->
               <!--  <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="citicSettlement" />
                            <property name="targetMethod" value="synOrder" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 10 0 * * ?" />
                </bean> -->
                
                <!-- 定时执行 代理系统数据同步 -->
                <!-- 
                <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="posSync" />
                            <property name="targetMethod" value="run" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0 2 * * ?" />
                </bean>                 
                 -->
                <!--隔10分钟执行一次 -->
                <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="queryBank" />
                            <property name="targetMethod" value="process" />
                            <property name="concurrent" value="false" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0/10 * * * ?" />
                </bean>                
                <!-- 轮询   30分钟一次 -->
                 <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="daifu" />
                            <property name="targetMethod" value="exec_df_alarm" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0/30 * * * ?" />
                </bean>
                
                <!-- 处理pos中信银行同步数据，每天凌晨5点执行 -->
                <!-- 
                 <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="LiqDataProcessor" />
                            <property name="targetMethod" value="process" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0 5 * * ?" />
                </bean>
                 -->
                 <!-- initMerAccServer   初始化商户账务信息表 定时任务 每月15号00:00执行 -->
                  <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="initMerAccServer" />
                            <property name="targetMethod" value="initMerAcc" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0 0 15 * ?" />
                </bean>
                
                 <!-- InifFtpTransData 数据录入   初始化FTP定时扫描任务  每工作日 09:00-18:00 间隔10分钟执行 -->
                 <!--  <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="InitFtpTransData" />
                            <property name="targetMethod" value="initFtpScanService" />
                        </bean>
                    </property>SUN-SAT   MON-FRI"
                    <property name="cronExpression" value="0 0/10 9-18 ? * SUN-SAT" />
                </bean> -->
                
                 <!-- initFtpDfResultService 正常结果返回   初始化FTP定时扫描任务  每工作日 09:00执行 30分钟执行一次 -->
                  <!-- <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="InitFtpTransData" />
                            <property name="targetMethod" value="initFtpDfResultService" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0/5 9-18 ? * SUN-SAT" />
                </bean> -->
                
                  <!-- initFtpDfResultService 异常结果生成   初始化FTP定时扫描任务  每工作日 09:00执行 30分钟执行一次 -->
                  <!-- <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="InitFtpTransData" />
                            <property name="targetMethod" value="initFtpAbnormalService" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0/5 9-18 ? * SUN-SAT" />
                </bean> -->
                
               <!--  <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                    <property name="jobDetail">
                        <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                            <property name="targetObject" ref="autoNoticeMer" />
                            <property name="targetMethod" value="run" />
                        </bean>
                    </property>
                    <property name="cronExpression" value="0 0/10 * * * ?" />
                </bean> -->          
                
                  <!-- posDzSync  Pos对账清算数据同步 每隔10分钟执行一次 --> 
               <bean class="org.springframework.scheduling.quartz.CronTriggerBean">
                   <property name="jobDetail">
                       <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                           <property name="targetObject" ref="posDzSync" />
                           <property name="targetMethod" value="process" />
                       </bean>
                   </property>
                   <property name="cronExpression" value="0 0/10 * * * ?" />
               </bean>

				<!-- 退款经办/审核/联机信息同步给清算系统 每隔5分钟执行一次 -->
				<bean class="org.springframework.scheduling.quartz.CronTriggerBean">
					<property name="jobDetail">
						<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
							<property name="targetObject" ref="refundSyncJob" />
							<property name="targetMethod" value="execute" />
							<property name="concurrent" value="false" />
						</bean>
					</property>
					<property name="cronExpression" value="0 0/5 * * * ?" />
				</bean>
            </list>
        </property>
    </bean>

	
	<bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${master_dburl}" />
		<property name="user" value="${master_dbusername}" />
		<property name="password" value="${master_dbpassword}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
		<property name="idleConnectionTestPeriod" value="60" />
		<!--初始化时获取连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="10" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="600" />
		<!--定义所有连接测试都执行的测试语句 -->
		<property name="preferredTestQuery" value="select 0 from dual" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="10" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="1000" />
		<property name="breakAfterAcquireFailure" value="false"/>
	</bean>
	
	<bean id="slaveDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${slave_dburl}" />
		<property name="user" value="${slave_dbusername}" />
		<property name="password" value="${slave_dbpassword}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
		<property name="idleConnectionTestPeriod" value="60" />
		<!--初始化时获取连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="10" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="10" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="600" />
		<!--定义所有连接测试都执行的测试语句 -->
		<property name="preferredTestQuery" value="select 0 from dual" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="10" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--两次连接中间隔时间，单位毫秒。Default: 1000 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="1000" />
		<property name="breakAfterAcquireFailure" value="false"/>
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="dataSource" class="com.rongyifu.mms.db.datasource.CustomerRoutingDataSource">
		<!-- 这个targetDataSource是必须要注入的 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="MASTER" value-ref="masterDataSource" />
				<entry key="SLAVE" value-ref="slaveDataSource" />
			</map>
		</property>
		<!-- 默认的数据源 -->
		<property name="defaultTargetDataSource" ref="masterDataSource" />
	</bean>
<!-- 	远程调用查pos当天交易数据接口配置文件 -->
	<import resource="rmi_client_context.xml"/>
</beans>